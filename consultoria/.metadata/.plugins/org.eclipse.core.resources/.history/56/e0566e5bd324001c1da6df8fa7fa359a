package br.com.mattec.consul.service.validation;

import java.util.ArrayList;
import java.util.List;

import javax.validation.ConstraintValidator;
import javax.validation.ConstraintValidatorContext;

import br.com.mattec.consul.controller.exceptions.FieldMessageCustom;
import br.com.mattec.consul.dto.CadastraDto;
import br.com.mattec.consul.entities.enums.TipoClient;
import br.com.mattec.consul.service.validation.util.BR;

public class ClientInsertCpfOrCnpjValidator implements ConstraintValidator<ClientInsertCpfOrCnpj, CadastraDto> {


	
	@Override
	public void initialize(ClientInsertCpfOrCnpj ann) {
	}

	@Override
	public boolean isValid(CadastraDto objDto, ConstraintValidatorContext context) {
		List<FieldMessageCustom> list = new ArrayList<>();
		
		if(objDto.getTipo().equals(TipoClient.PESSOAFISICA.getCod()) && !BR.isValidCPF(
				objDto.getCpfOuCnpj())) {
			list.add(new FieldMessageCustom("cpfOuCnpj", "CPF Inválido"));
		}
		if(objDto.getTipo().equals(TipoClient.PESSOAJURIDICA.getCod()) && !BR.isValidCNPJ(
				objDto.getCpfOuCnpj())) {
			list.add(new FieldMessageCustom("cpfOuCnpj", "CNPJ Inválido"));
		}
		if(objDto.getTipo().equals(TipoClient.PESSOAFISICA.getCod()) !=1 || objDto.getTipo().equals(TipoClient.PESSOAJURIDICA.getCod()) !=2){
			list.add(new FieldMessageCustom("cpfOuCnpj", "Tipo inválido no cadastro, não é cpf e nem cnpj"));
		}
		

		for (FieldMessageCustom e : list) {
			context.disableDefaultConstraintViolation();
			context.buildConstraintViolationWithTemplate(e.getMessage()).addPropertyNode(e.getFieldName())
					.addConstraintViolation();
		}
		return list.isEmpty();
	}
}
